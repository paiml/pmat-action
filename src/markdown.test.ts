import { generateMarkdown } from './markdown';import { Violation } from './pmat';describe('generateMarkdown', () => {  it('should generate a markdown table from a list of violations', () => {    const violations: Violation[] = [      {        file: 'src/main.ts',        severity: 'error',        value: 10      },      {        file: 'src/pmat.ts',        severity: 'warning',        value: 5      }    ];    const owner = 'test-owner';    const repo = 'test-repo';    const sha = 'test-sha';    const expectedMarkdown = '## Automated Check Failed!\n\nCyclomatic complexity found:\n\n# Code Complexity Violations\n\n| Path | Severity | Value |\n|------|----------|-------|\n| [src/main.ts](https://github.com/test-owner/test-repo/blob/test-sha/src/main.ts) | error | 10 |\n| [src/pmat.ts](https://github.com/test-owner/test-repo/blob/test-sha/src/pmat.ts) | warning | 5 |\n';    const actualMarkdown = generateMarkdown(violations, owner, repo, sha);    expect(actualMarkdown).toEqual(expectedMarkdown);  });});